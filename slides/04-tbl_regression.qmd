# tbl_regression()

## Traditional model summary()

::: columns
::: {.column width="50%" style="font-size:0.75em;font-family:monospace"}
```{r}
#| output: true
#| label: raw-model-summary
df <- df %>% 
  mutate(Raised_BP = if_else(Raised_BP=="Yes", 1,0))
m1 <- 
  glm(
    Raised_BP ~ Age + Smoking + BMI,
    data = df,
    family = binomial(link = "logit")
  )
```
:::

::: {.column width="50%" style="font-size:0.5em;"}
```{r}
#| output: true
summary(m1)
```
:::
:::

Looks [messy]{.emphasis} and it's not easy to digest

## Basic tbl_regression()

```{r}
#| output-location: 'column'
#| echo: true
tbl_regression(m1)
```

-   Displays [p-values]{.emphasis} for covariates

-   Shows [reference levels]{.emphasis} for categorical variables

-   [Model type recognized]{.emphasis} as logistic regression with odds ratio appearing in header

## Customize tbl_regression() output

```{r}
#| output-location: 'column'
#| echo: true
tbl_regression(
  m1,
  exponentiate = TRUE
) |> 
  add_global_p() |>
  add_glance_table(
    include = c(nobs,
                logLik,
                AIC,
                BIC)
  )
```

-   Display [odds ratio]{.emphasis} estimates and [confidence intervals]{.emphasis}

-   Add [global p-values]{.emphasis}

-   Add various model statistics

## Supported models in tbl_regression()

```{r}
#| echo: false

list_mods <- broom.helpers::supported_models$model
list_length <- length(list_mods)
cut_length <- floor(list_length/3)

```

::: {.columns style="font-size:0.65em"}
::: {.column width="30%"}
```{r}
#| echo: false
glue::glue("* {broom.helpers::supported_models$model[1:cut_length]} <br>") 
```
:::

::: {.column width="30%"}
```{r}
#| echo: false
glue::glue("* {broom.helpers::supported_models$model[(cut_length + 1): (2*cut_length)]} <br>") 
```
:::

::: {.column width="30%"}
```{r}
#| echo: false
glue::glue("* {broom.helpers::supported_models$model[(2*cut_length + 1):list_length]} <br>")
```
:::
:::

**Custom tidiers** can be written and passed to `tbl_regression()` using the `tidy_fun=` argument.

## Univariate models with tbl_uvregression()

```{r}
#| output-location: "column"
tbl_uvreg <- 
  df |> 
  select(-District, -WSTEP3, - SBP, -DBP) |> 
  tbl_uvregression(
    method = glm,
    y = Raised_BP,
    method.args = 
      list(family = binomial),
    exponentiate = TRUE
  )
tbl_uvreg
```

-   Specify model `method`, `method.args`, and the `response` variable

-   Arguments and helper functions like `exponentiate`, `bold_*()`, `add_global_p()` can also be used with `tbl_uvregression()`
